<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/css/styles.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/tailwind.css">
    <title>Dev-Toys - Productos</title>
</head>
<body>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Bungee+Spice&display=swap');

        body {
            background-image: url('img/fondo.jpg');
        }
    
        #categorySelect {
            font-family: 'Bungee Spice', cursive;
        }
        .category-icon {
            width: 40px;
            height: 40px;
        }
        .category-item {
            cursor: pointer;
            transition: transform 0.3s, color 0.3s;
        }
        .category-item:hover {
            color: #ffcc00;
            transform: scale(1.1);
        }
    </style>
    
    <%- include('navBar') %>
    
    <div class="flex flex-col md:flex-row">
        <!-- Barra lateral mejorada -->
        <aside class="md:w-0/4 p-4 bg-gradient-to-b from-blue-900 to-indigo-900 shadow-lg rounded-lg text-center md:mr-4">
            <h2 class="text-2xl font-bold text-yellow-500 mb-4" style="font-family: 'Bungee Spice', cursive;">Categorías</h2>
            <div class="flex justify-center mb-4">
                <i class="fas fa-gamepad text-yellow-400 text-3xl mx-2"></i>
                <i class="fas fa-headset text-yellow-400 text-3xl mx-2"></i>
                <i class="fas fa-solid fa-trophy text-yellow-400 text-3xl mx-2"></i>
            </div>
            <div>
                <label for="categorySelect" class="block text-lg font-bold text-yellow-500 mb-2">Filtrar por categoría</label>
                <select id="categorySelect" class="w-full p-3 text-white bg-transparent border border-yellow-500 rounded-lg hover:border-yellow-400 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-yellow-500">
                    <option value="all">Todas las categorías</option>
                    <% categories.forEach(category => { %>
                        <option value="<%= category.id %>"><%= category.name %></option>
                    <% }) %>
                </select>
            </div>
        </aside>

        <!-- Contenido principal -->
        <main class="w-full md:w-3/4 p-4">
            <div id="productsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <% products.forEach(product => { %>
                    <div class="bg-gradient-to-r from-gray-800 to-gray-900 border border-gray-700 rounded-lg shadow-xl product-card hover:shadow-2xl transition-transform transform hover:-translate-y-1 hover:scale-105 p-4" data-product-id="<%= product.id %>">
                        <img src="/uploads/<%= product.imagen1 %>" alt="<%= product.name %>" class="w-full h-48 object-cover mb-4 rounded-lg">
                        <h2 class="text-lg font-bold text-yellow-400 mb-2 text-center"><%= product.name %></h2>
                        <p class="text-teal-300 text-center font-bold">Precio: $<%= product.price.toLocaleString('es-CL') %></p>
                        <p class="text-gray-300 text-center">Stock: <%= product.stock %></p>
                        <p class="text-gray-400 text-sm mt-2 mb-4"><%= product.description %></p>
                        <div class="flex justify-between mt-4">
                            <button class="bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-300 detalles-btn" data-product-id="<%= product.id %>">
                                Ver detalles
                            </button>
                            <button class="bg-gradient-to-r from-purple-600 to-pink-500 text-white px-4 py-2 rounded-lg hover:bg-gradient-to-l transition-all duration-300 transform hover:scale-110 add-to-cart-btn" 
                                data-product-id="<%= product.id %>"
                                data-product-name="<%= product.name %>"
                                data-product-price="<%= product.price %>"
                                data-product-image="<%= product.imagen1 %>">
                                Agregar al carrito
                            </button>
                        </div>
                    </div>
                <% }) %>
            </div>
        </main>
    </div>
    <%- include('footer') %>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="/js/cart.js"></script>
    <script>

        document.addEventListener("DOMContentLoaded", function() {
            attachEventListeners()
        });
        // Filtrado de productos por categoría
        document.getElementById('categorySelect').addEventListener('change', filterProductsByCategory);
        
        function filterProductsByCategory(){
            const selectedCategoryId = this.value;
            const allProducts = <%- JSON.stringify(products) %>;
            const filteredProducts = selectedCategoryId === 'all' ? allProducts : allProducts.filter(product => product.categoryId === selectedCategoryId);
            renderProducts(filteredProducts);
        }
        
        function renderProducts(products){
            const container = document.getElementById('productsContainer');
            container.innerHTML = products.map(product => `
                <div class="bg-gradient-to-r from-gray-800 to-gray-900 border border-gray-700 rounded-lg shadow-xl product-card hover:shadow-2xl transition-transform transform hover:-translate-y-1 hover:scale-105 p-4" data-product-id="${product.id}">
                    <img src="/uploads/${product.imagen1}" alt="${product.name}" class="w-full h-48 object-cover mb-4 rounded-lg">
                    <h2 class="text-lg font-bold text-yellow-400 mb-2 text-center">${product.name}</h2>
                    <p class="text-teal-300 text-center font-bold">Precio: $${product.price.toLocaleString('es-CL')} </p>
                    <p class="text-gray-300 text-center">Stock: ${product.stock}</p>
                    <p class="text-gray-400 text-sm mt-2 mb-4">${product.description}</p>
                    <div class="flex justify-between mt-4">
                        <button class="bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-300 detalles-btn" data-product-id="${product.id}">
                            Ver detalles
                        </button>
                        <button class="bg-gradient-to-r from-purple-600 to-pink-500 text-white px-4 py-2 rounded-lg hover:bg-gradient-to-l transition-all duration-300 transform hover:scale-110 add-to-cart-btn" 
                            data-product-id="${product.id}"
                            data-product-name="${product.name}"
                            data-product-price="${product.price}"
                            data-product-image="${product.imagen1}">
                            Agregar al carrito
                        </button>
                    </div>
                </div>
            `).join('');
            attachEventListeners();
        }
        
        function attachEventListeners() {
            document.querySelectorAll('.detalles-btn').forEach(btn => btn.addEventListener('click', showProductDetails));
            document.querySelectorAll('.add-to-cart-btn').forEach(btn => btn.addEventListener('click', addToCart));
        }

        // Función para mostrar modal de detalles del producto
        async function showProductDetails() {
            const productId = this.dataset.productId;
            try {
                const response = await fetch(`/productos/detalles/${productId}`);
                if (!response.ok) throw new Error('Error al obtener los detalles del producto');
                const product = await response.json();
                Swal.fire({
                    title: `<span class="text-lg font-bold text-gray-900">${product.name}</span>`,
                    html: `
                        <div class="flex flex-col md:flex-row items-center md:items-start">
                        <img src="/uploads/${product.imagen1}" alt="${product.name}" class="w-32 h-32 md:w-48 md:h-48 object-cover rounded-lg shadow-md mb-4 md:mb-0 md:mr-6">
                        <div class="text-left">
                            <p class="text-gray-700 text-sm mb-2">
                                <span class="font-semibold">Precio:</span> $${product.price.toLocaleString('es-CL')}
                            </p>
                            <p class="text-gray-700 text-sm mb-2">
                                <span class="font-semibold">Descripción:</span> ${product.description || 'No disponible'}
                            </p>
                            <button id="addToCartBtn" class="px-4 py-2 mt-3 text-white bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-500 hover:to-purple-500 rounded-md shadow-lg transition-all duration-300 ease-in-out">
                                Agregar al Carrito
                            </button>
                        </div>
                    </div>
                    `,
                    showCloseButton: true,
                    focusConfirm: false,
                    confirmButtonText: 'Cerrar',
                    customClass: {
                        popup: 'rounded-lg bg-white shadow-2xl p-4 md:p-6',
                        closeButton: 'text-gray-500 hover:text-gray-700 focus:outline-none',
                        container: 'flex justify-center items-center',
                    }
                });
            } catch (error) {
                Swal.fire('Error', error.message, 'error');
            }
        }
        

        async function addToCart(event) {
            const button = event.currentTarget;
            const productId = button.dataset.productId;
            const product = <%- JSON.stringify(products) %>.find(p => p.id === productId);
        
            if (product) {
                // Datos del producto que se enviarán al servidor
                const productData = {
                    productId: product.id,
                    name: product.name,
                    price: product.price,
                    quantity: 1,  // Por defecto, la cantidad es 1
                    image: product.imagen1  // Suponiendo que la imagen se llama "imagen1"
                };
        
                try {
                    const response = await fetch('/carrito/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(productData),
                    });
        
                    const data = await response.json();
        
                    if (response.ok) {
                        // Mostrar SweetAlert con la información del producto agregado
                        Swal.fire({
                            title: 'Producto agregado al carrito',
                            icon: 'success',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 1500,
                            timerProgressBar: true,
                            customClass: {
                                popup: 'shadow-lg bg-green-100 rounded-lg p-3'
                    }
                        });
                        updateCartBadge(); // Actualiza el icono del carrito
                    } else {
                        throw new Error(data.message || 'Error al agregar el producto al carrito');
                    }
                } catch (error) {
                    console.error('Error al agregar al carrito:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Ocurrió un error al agregar el producto al carrito',
                        icon: 'error',
                        confirmButtonText: 'Cerrar'
                    });
                }
            }
        }
    </script>
</body>
</html>